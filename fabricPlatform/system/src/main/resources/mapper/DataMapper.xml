<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.keyRD.system.dao.DataDao">
    <resultMap id="BaseResultMap" type="com.hust.keyRD.commons.entities.DataSample">
        <!--映射column为数据库字段，property为实体类属性-->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="channel_id" property="channelId" jdbcType="INTEGER"/>
        <id column="mongo_id" property="mongoId" jdbcType="VARCHAR"/>
        <id column="data_name" property="dataName" jdbcType="VARCHAR"/>
        <id column="data_type" property="dataType" jdbcType="VARCHAR"/>
        <id column="data_size" property="dataSize" jdbcType="DOUBLE"/>
        <id column="origin_user_id" property="originUserId" jdbcType="INTEGER"/>
        <id column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <id column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!--上传file-->
    <insert id="uploadFile" parameterType="DataSample" useGeneratedKeys="true" keyProperty="id">
        insert into data_sample(channel_id,mongo_id,data_name,data_type,data_size,origin_user_id,created_time,modified_time)
        values(#{channelId},#{mongoId},#{dataName},#{dataType},#{dataSize},#{originUserId},#{createdTime},#{modifiedTime});
    </insert>
    <!--获取文件列表-->
    <select id="getDataList" parameterType="Map" resultMap="BaseResultMap">
        select * from data_sample;
    </select>
    <!--根据文件id删除文件-->
    <delete id="deleteDataById" parameterType="Integer">
        delete from data_sample where id=#{id};
    </delete>
    <!--根据id获取文件-->
    <select id="findDataById" parameterType="Map" resultMap="BaseResultMap">
        select * from data_sample where id=#{id};
    </select>
    <update id="updateFile" parameterType="DataSample">
        update data_sample set mongo_id=#{mongoId},data_size=#{dataSize},modified_time=#{modifiedTime}
        where id=#{id}
    </update>
    <!--获取文件列表-->
    <select id="getDataListByOriginUserId" parameterType="Map" resultMap="BaseResultMap">
        select * from data_sample
        where origin_user_id=#{originUserId};
    </select>
    
    <select id="getUserInnerDataListByUserIdAndChannelId" parameterType="Map" resultType="UserInnerDataDto">
        select data_sample.id as id,data_sample.channel_id as channelId, data_sample.data_name as dataName, data_sample.data_type as dataType, data_sample.mongo_id as mongoId,
               data_sample.origin_user_id as originUserId, data_sample.created_time as createdTime, data_sample.modified_time as modifiedTime,data_sample.data_size as dataSize,
               GROUP_CONCAT(data_authority.authority_key) as dataAuthorityList 
        from data_sample  left join data_authority on data_sample.id = data_authority.data_sample_id and data_authority.user_id = #{userId}
        where data_sample.channel_id = #{channelId}
        group by data_sample.id;
    </select>
</mapper>