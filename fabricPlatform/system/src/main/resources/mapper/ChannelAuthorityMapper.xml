<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.keyRD.system.dao.ChannelAuthorityDao">
    <resultMap id="BaseResultMap" type="com.hust.keyRD.commons.entities.ChannelAuthority">
        <!--映射column为数据库字段，property为实体类属性-->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="channel_id" property="channelId" jdbcType="INTEGER"/>
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <id column="authority_key" property="authorityKey" jdbcType="INTEGER"/>
    </resultMap>
    <select id="getAddAuthorityChannels" resultType="java.lang.String">
        select channel_name from channel_authority,channel where channel_authority.channel_id=channel.id and channel_authority.user_id=#{userId} and channel_authority.authority_key=1;
    </select>
    <select id="findChannelAuthorityByUserIdAndChannelId" parameterType="Map" resultMap="BaseResultMap">
        select * from channel_authority where channel_id=#{channelId} and user_id=#{userId};
    </select>
     <insert id="addChannelAuthority" parameterType="ChannelAuthority" useGeneratedKeys="true" keyProperty="id">
        insert into channel_authority (id,channel_id,user_id,authority_key) values (null,#{channelId},#{userId},#{authorityKey});
    </insert>
    <delete id="deleteChannelAuthority" parameterType="ChannelAuthority">
        delete from channel_authority where  channel_id=#{channelId} and user_id=#{userId} and authority_key=#{authorityKey};
    </delete>
    <select id="findChannelAuthority" parameterType="Map" resultMap="BaseResultMap">
        select * from channel_authority where channel_id=#{channelId} and user_id=#{userId} and authority_key=#{authorityKey};
    </select>
    <!--<select id="findUsersChannelAuthority" parameterType="Map" resultType="UserChannelAuthDto" >-->
    <!--    select user.id as user_id,user.user_name as userName,user.channel_id as channelId,channel.channel_name as channelName,channel_authority.authority_key as authorityKey-->
    <!--    from user join channel_authority on user.id = channel_authority.user_id and user.channel_id = channel_authority.channel_id join channel on user.channel_id = channel.id-->
    <!--    where user.id != #{adminId} and user.channel_id = #{adminChannelId}-->
    
    <!--</select>-->
    <select id="findUsersChannelAuthority" parameterType="Map" resultType="UserChannelAuthDto" >
        select user.id as userId,user.user_name as userName,user.channel_id as channelId,channel.channel_name as channelName,group_concat(channel_authority.authority_key) as authSet
        from user left join channel_authority on user.id = channel_authority.user_id and user.channel_id = 3 - channel_authority.channel_id join channel on user.channel_id = channel.id
        where user.channel_id = #{adminChannelId} and user.is_admin = 0
        group by user.id

    </select>

    
</mapper>